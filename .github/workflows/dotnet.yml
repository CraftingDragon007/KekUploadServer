name: .NET CI

on:
  push:
    # Pattern matched against refs/tags
    branches: master

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      BUILD_ID: ${{ steps.buildnumber.outputs.build_number }}
      SHA_SHORT: ${{ steps.commithash.outputs.sha_short }}
      RELEASE_ID: ${{ steps.release.outputs.release_id }}

    steps:
      - uses: actions/checkout@v2

      - name: Set outputs
        id: commithash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Install xpath
        run: sudo apt-get install -y libxml-xpath-perl
        
      - name: Parse version
        id: versionnumber
        run: echo "::set-output name=version_number::$(xpath -q -e /Project/PropertyGroup/AssemblyVersion/text\(\) ./KekUploadServer/KekUploadServer.csproj)"

      - name: Create a release
        id: release
        uses: KotwOSS/pipe-to-release@2.0.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

          skip_errors: true

          draft: false
          prerelease: true

          tag: "release_${{ steps.versionnumber.outputs.version_number }}_build_${{ github.run_number }}_${{ github.run_id }}"
          release_name: "Build: ${{ github.run_number }}.${{ github.run_id }} Version:${{ steps.versionnumber.outputs.version_number }} Commit:${{ steps.commithash.outputs.sha_short }}"
          release_body: "This is an automated build\n\n**Build:** ${{ github.run_number }}.${{ github.run_id }}\n**Version:** ${{ steps.versionnumber.outputs.version_number }}\n**Commit:** ${{ steps.commithash.outputs.sha_short }}"

  buildMatrix:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    needs: prepare

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            build: dotnet publish -c release -r linux-x64 -p:PublishSingleFile=true --self-contained true --verbosity Normal -p:PublishTrimmed=True -p:EnableCompressionInSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true
            filemap: |
              KekUploadServer/bin/Release/net6.0/linux-x64/publish/KekUploadServer>KekUploadServer-linux-amd64
          - os: windows-latest
            build: dotnet publish -c release -r win-x64 -p:PublishSingleFile=true --self-contained true --verbosity Normal -p:PublishTrimmed=True -p:EnableCompressionInSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true
            filemap: |
              KekUploadServer/bin/Release/net6.0/win-x64/publish/KekUploadServer.exe>KekUploadServer-windows-amd64.exe
          - os: macos-latest
            build: dotnet publish -c release -r osx-x64 -p:PublishSingleFile=true --self-contained true --verbosity Normal -p:PublishTrimmed=True -p:EnableCompressionInSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true
            filemap: |
              KekUploadServer/bin/Release/net6.0/osx-x64/publish/KekUploadServer>KekUploadServer-macos-amd64
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: ${{ matrix.build }}
      - name: Pipe files to release
        uses: KotwOSS/pipe-to-release@2.0.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
          filemap: ${{ matrix.filemap }}
          
          skip_errors: true
          
          release_id: ${{ needs.prepare.outputs.RELEASE_ID }}